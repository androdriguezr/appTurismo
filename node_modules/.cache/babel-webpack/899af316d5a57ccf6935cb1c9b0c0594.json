{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/arica/Documents/projects_html/pagina-turimoapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PaisService {\n  constructor(http) {\n    this.http = http;\n    this.URL_BASE = environment.API_URL;\n  }\n\n  InsertRecord(data) {\n    return this.http.post(`${this.URL_BASE}pais/nuevo`, data);\n  }\n\n  UpdateRecord(data, id) {\n    return this.http.put(`${this.URL_BASE}pais/actualizar/${id}`, data);\n  }\n\n  DeleteItemRecord(id) {\n    return this.http.delete(`${this.URL_BASE}pais/eliminar/${id}`);\n  }\n\n  BuscarRegistro(id) {\n    const responce = fetch(`${this.URL_BASE}pais/buscarbyid/${id}`);\n    return responce;\n  }\n\n  BuscarRegistroPorNombre(nombre) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const responce = yield fetch(`${_this.URL_BASE}pais/buscarbyname/${nombre}`);\n      return yield responce.json();\n    })();\n  }\n\n  listarPaises() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const responce = yield fetch(`${_this2.URL_BASE}pais/listartodos`);\n      return yield responce.json();\n    })();\n  }\n\n  listarPaises2() {\n    const responce = fetch(`${this.URL_BASE}pais/listartodos`);\n    return responce;\n  }\n\n}\n\nPaisService.ɵfac = function PaisService_Factory(t) {\n  return new (t || PaisService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nPaisService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PaisService,\n  factory: PaisService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/arica/Documents/projects_html/pagina-turimoapp/src/app/services/pais/pais.service.ts"],"names":["environment","i0","i1","PaisService","constructor","http","URL_BASE","API_URL","InsertRecord","data","post","UpdateRecord","id","put","DeleteItemRecord","delete","BuscarRegistro","responce","fetch","BuscarRegistroPorNombre","nombre","json","listarPaises","listarPaises2","ɵfac","PaisService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBN,WAAW,CAACO,OAA5B;AACH;;AACDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf,WAAO,KAAKJ,IAAL,CAAUK,IAAV,CAAgB,GAAE,KAAKJ,QAAS,YAAhC,EAA6CG,IAA7C,CAAP;AACH;;AACDE,EAAAA,YAAY,CAACF,IAAD,EAAOG,EAAP,EAAW;AACnB,WAAO,KAAKP,IAAL,CAAUQ,GAAV,CAAe,GAAE,KAAKP,QAAS,mBAAkBM,EAAG,EAApD,EAAuDH,IAAvD,CAAP;AACH;;AACDK,EAAAA,gBAAgB,CAACF,EAAD,EAAK;AACjB,WAAO,KAAKP,IAAL,CAAUU,MAAV,CAAkB,GAAE,KAAKT,QAAS,iBAAgBM,EAAG,EAArD,CAAP;AACH;;AACDI,EAAAA,cAAc,CAACJ,EAAD,EAAK;AACf,UAAMK,QAAQ,GAAGC,KAAK,CAAE,GAAE,KAAKZ,QAAS,mBAAkBM,EAAG,EAAvC,CAAtB;AACA,WAAOK,QAAP;AACH;;AACKE,EAAAA,uBAAuB,CAACC,MAAD,EAAS;AAAA;;AAAA;AAClC,YAAMH,QAAQ,SAASC,KAAK,CAAE,GAAE,KAAI,CAACZ,QAAS,qBAAoBc,MAAO,EAA7C,CAA5B;AACA,mBAAaH,QAAQ,CAACI,IAAT,EAAb;AAFkC;AAGrC;;AACKC,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,YAAML,QAAQ,SAASC,KAAK,CAAE,GAAE,MAAI,CAACZ,QAAS,kBAAlB,CAA5B;AACA,mBAAaW,QAAQ,CAACI,IAAT,EAAb;AAFiB;AAGpB;;AACDE,EAAAA,aAAa,GAAG;AACZ,UAAMN,QAAQ,GAAGC,KAAK,CAAE,GAAE,KAAKZ,QAAS,kBAAlB,CAAtB;AACA,WAAOW,QAAP;AACH;;AA7BoB;;AA+BzBd,WAAW,CAACqB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIvB,WAAV,EAAuBF,EAAE,CAAC0B,QAAH,CAAYzB,EAAE,CAAC0B,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAzB,WAAW,CAAC0B,KAAZ,GAAoB,aAAc5B,EAAE,CAAC6B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE5B,WAAT;AAAsB6B,EAAAA,OAAO,EAAE7B,WAAW,CAACqB,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class PaisService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.URL_BASE = environment.API_URL;\r\n    }\r\n    InsertRecord(data) {\r\n        return this.http.post(`${this.URL_BASE}pais/nuevo`, data);\r\n    }\r\n    UpdateRecord(data, id) {\r\n        return this.http.put(`${this.URL_BASE}pais/actualizar/${id}`, data);\r\n    }\r\n    DeleteItemRecord(id) {\r\n        return this.http.delete(`${this.URL_BASE}pais/eliminar/${id}`);\r\n    }\r\n    BuscarRegistro(id) {\r\n        const responce = fetch(`${this.URL_BASE}pais/buscarbyid/${id}`);\r\n        return responce;\r\n    }\r\n    async BuscarRegistroPorNombre(nombre) {\r\n        const responce = await fetch(`${this.URL_BASE}pais/buscarbyname/${nombre}`);\r\n        return await responce.json();\r\n    }\r\n    async listarPaises() {\r\n        const responce = await fetch(`${this.URL_BASE}pais/listartodos`);\r\n        return await responce.json();\r\n    }\r\n    listarPaises2() {\r\n        const responce = fetch(`${this.URL_BASE}pais/listartodos`);\r\n        return responce;\r\n    }\r\n}\r\nPaisService.ɵfac = function PaisService_Factory(t) { return new (t || PaisService)(i0.ɵɵinject(i1.HttpClient)); };\r\nPaisService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PaisService, factory: PaisService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}