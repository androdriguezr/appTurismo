{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/arica/Documents/projects_html/pagina-turimoapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegionService {\n  constructor(http) {\n    this.http = http;\n    this.URL_BASE = environment.API_URL;\n  }\n\n  InsertRecord(data, id) {\n    return this.http.post(`${this.URL_BASE}region/nuevo/${id}`, data);\n  }\n\n  UpdateRecord(data, id) {\n    return this.http.put(`${this.URL_BASE}region/actualizar/${id}`, data);\n  }\n\n  DeleteItemRecord(id) {\n    return this.http.delete(`${this.URL_BASE}region/eliminar/${id}`);\n  }\n\n  BuscarRegionById(id) {\n    const responce = fetch(`${this.URL_BASE}region/buscarbyid/${id}`);\n    return responce;\n  }\n\n  BuscarRegionPorNombre(nombre) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const responce = yield fetch(`${_this.URL_BASE}region/buscarbyname/${nombre}`);\n      return yield responce.json();\n    })();\n  }\n\n  listarRegiones() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const responce = yield fetch(`${_this2.URL_BASE}region/listartodos`);\n      return yield responce.json();\n    })();\n  }\n\n}\n\nRegionService.ɵfac = function RegionService_Factory(t) {\n  return new (t || RegionService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nRegionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegionService,\n  factory: RegionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/arica/Documents/projects_html/pagina-turimoapp/src/app/services/region/region.service.ts"],"names":["environment","i0","i1","RegionService","constructor","http","URL_BASE","API_URL","InsertRecord","data","id","post","UpdateRecord","put","DeleteItemRecord","delete","BuscarRegionById","responce","fetch","BuscarRegionPorNombre","nombre","json","listarRegiones","ɵfac","RegionService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,aAAN,CAAoB;AACvBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBN,WAAW,CAACO,OAA5B;AACH;;AACDC,EAAAA,YAAY,CAACC,IAAD,EAAOC,EAAP,EAAW;AACnB,WAAO,KAAKL,IAAL,CAAUM,IAAV,CAAgB,GAAE,KAAKL,QAAS,gBAAeI,EAAG,EAAlD,EAAqDD,IAArD,CAAP;AACH;;AACDG,EAAAA,YAAY,CAACH,IAAD,EAAOC,EAAP,EAAW;AACnB,WAAO,KAAKL,IAAL,CAAUQ,GAAV,CAAe,GAAE,KAAKP,QAAS,qBAAoBI,EAAG,EAAtD,EAAyDD,IAAzD,CAAP;AACH;;AACDK,EAAAA,gBAAgB,CAACJ,EAAD,EAAK;AACjB,WAAO,KAAKL,IAAL,CAAUU,MAAV,CAAkB,GAAE,KAAKT,QAAS,mBAAkBI,EAAG,EAAvD,CAAP;AACH;;AACDM,EAAAA,gBAAgB,CAACN,EAAD,EAAK;AACjB,UAAMO,QAAQ,GAAGC,KAAK,CAAE,GAAE,KAAKZ,QAAS,qBAAoBI,EAAG,EAAzC,CAAtB;AACA,WAAOO,QAAP;AACH;;AACKE,EAAAA,qBAAqB,CAACC,MAAD,EAAS;AAAA;;AAAA;AAChC,YAAMH,QAAQ,SAASC,KAAK,CAAE,GAAE,KAAI,CAACZ,QAAS,uBAAsBc,MAAO,EAA/C,CAA5B;AACA,mBAAaH,QAAQ,CAACI,IAAT,EAAb;AAFgC;AAGnC;;AACKC,EAAAA,cAAc,GAAG;AAAA;;AAAA;AACnB,YAAML,QAAQ,SAASC,KAAK,CAAE,GAAE,MAAI,CAACZ,QAAS,oBAAlB,CAA5B;AACA,mBAAaW,QAAQ,CAACI,IAAT,EAAb;AAFmB;AAGtB;;AAzBsB;;AA2B3BlB,aAAa,CAACoB,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAItB,aAAV,EAAyBF,EAAE,CAACyB,QAAH,CAAYxB,EAAE,CAACyB,UAAf,CAAzB,CAAP;AAA8D,CAAvH;;AACAxB,aAAa,CAACyB,KAAd,GAAsB,aAAc3B,EAAE,CAAC4B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE3B,aAAT;AAAwB4B,EAAAA,OAAO,EAAE5B,aAAa,CAACoB,IAA/C;AAAqDS,EAAAA,UAAU,EAAE;AAAjE,CAAtB,CAApC","sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class RegionService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.URL_BASE = environment.API_URL;\r\n    }\r\n    InsertRecord(data, id) {\r\n        return this.http.post(`${this.URL_BASE}region/nuevo/${id}`, data);\r\n    }\r\n    UpdateRecord(data, id) {\r\n        return this.http.put(`${this.URL_BASE}region/actualizar/${id}`, data);\r\n    }\r\n    DeleteItemRecord(id) {\r\n        return this.http.delete(`${this.URL_BASE}region/eliminar/${id}`);\r\n    }\r\n    BuscarRegionById(id) {\r\n        const responce = fetch(`${this.URL_BASE}region/buscarbyid/${id}`);\r\n        return responce;\r\n    }\r\n    async BuscarRegionPorNombre(nombre) {\r\n        const responce = await fetch(`${this.URL_BASE}region/buscarbyname/${nombre}`);\r\n        return await responce.json();\r\n    }\r\n    async listarRegiones() {\r\n        const responce = await fetch(`${this.URL_BASE}region/listartodos`);\r\n        return await responce.json();\r\n    }\r\n}\r\nRegionService.ɵfac = function RegionService_Factory(t) { return new (t || RegionService)(i0.ɵɵinject(i1.HttpClient)); };\r\nRegionService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RegionService, factory: RegionService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}