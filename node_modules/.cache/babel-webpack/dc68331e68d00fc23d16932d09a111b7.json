{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/arica/Documents/projects_html/pagina-turimoapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PlatoService {\n  constructor(http) {\n    this.http = http;\n    this.URL_BASE = environment.API_URL;\n  }\n\n  InsertRecord(data, id) {\n    return this.http.post(`${this.URL_BASE}plato/nuevo/${id}`, data);\n  }\n\n  UpdateRecord(data, id) {\n    return this.http.put(`${this.URL_BASE}plato/actualizar/${id}`, data);\n  }\n\n  DeleteItemRecord(id) {\n    return this.http.delete(`${this.URL_BASE}plato/eliminar/${id}`);\n  }\n\n  BuscarPlatoById(id) {\n    const responce = fetch(`${this.URL_BASE}plato/buscarbyid/${id}`);\n    return responce;\n  }\n\n  BuscarPlatoPorNombre(nombre) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const responce = yield fetch(`${_this.URL_BASE}plato/buscarbyname/${nombre}`);\n      return yield responce.json();\n    })();\n  }\n\n  listarPlatos() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const responce = yield fetch(`${_this2.URL_BASE}plato/listartodos`);\n      return yield responce.json();\n    })();\n  }\n\n}\n\nPlatoService.ɵfac = function PlatoService_Factory(t) {\n  return new (t || PlatoService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nPlatoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PlatoService,\n  factory: PlatoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/arica/Documents/projects_html/pagina-turimoapp/src/app/services/plato/plato.service.ts"],"names":["environment","i0","i1","PlatoService","constructor","http","URL_BASE","API_URL","InsertRecord","data","id","post","UpdateRecord","put","DeleteItemRecord","delete","BuscarPlatoById","responce","fetch","BuscarPlatoPorNombre","nombre","json","listarPlatos","ɵfac","PlatoService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBN,WAAW,CAACO,OAA5B;AACH;;AACDC,EAAAA,YAAY,CAACC,IAAD,EAAOC,EAAP,EAAW;AACnB,WAAO,KAAKL,IAAL,CAAUM,IAAV,CAAgB,GAAE,KAAKL,QAAS,eAAcI,EAAG,EAAjD,EAAoDD,IAApD,CAAP;AACH;;AACDG,EAAAA,YAAY,CAACH,IAAD,EAAOC,EAAP,EAAW;AACnB,WAAO,KAAKL,IAAL,CAAUQ,GAAV,CAAe,GAAE,KAAKP,QAAS,oBAAmBI,EAAG,EAArD,EAAwDD,IAAxD,CAAP;AACH;;AACDK,EAAAA,gBAAgB,CAACJ,EAAD,EAAK;AACjB,WAAO,KAAKL,IAAL,CAAUU,MAAV,CAAkB,GAAE,KAAKT,QAAS,kBAAiBI,EAAG,EAAtD,CAAP;AACH;;AACDM,EAAAA,eAAe,CAACN,EAAD,EAAK;AAChB,UAAMO,QAAQ,GAAGC,KAAK,CAAE,GAAE,KAAKZ,QAAS,oBAAmBI,EAAG,EAAxC,CAAtB;AACA,WAAOO,QAAP;AACH;;AACKE,EAAAA,oBAAoB,CAACC,MAAD,EAAS;AAAA;;AAAA;AAC/B,YAAMH,QAAQ,SAASC,KAAK,CAAE,GAAE,KAAI,CAACZ,QAAS,sBAAqBc,MAAO,EAA9C,CAA5B;AACA,mBAAaH,QAAQ,CAACI,IAAT,EAAb;AAF+B;AAGlC;;AACKC,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,YAAML,QAAQ,SAASC,KAAK,CAAE,GAAE,MAAI,CAACZ,QAAS,mBAAlB,CAA5B;AACA,mBAAaW,QAAQ,CAACI,IAAT,EAAb;AAFiB;AAGpB;;AAzBqB;;AA2B1BlB,YAAY,CAACoB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAItB,YAAV,EAAwBF,EAAE,CAACyB,QAAH,CAAYxB,EAAE,CAACyB,UAAf,CAAxB,CAAP;AAA6D,CAApH;;AACAxB,YAAY,CAACyB,KAAb,GAAqB,aAAc3B,EAAE,CAAC4B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE3B,YAAT;AAAuB4B,EAAAA,OAAO,EAAE5B,YAAY,CAACoB,IAA7C;AAAmDS,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class PlatoService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.URL_BASE = environment.API_URL;\r\n    }\r\n    InsertRecord(data, id) {\r\n        return this.http.post(`${this.URL_BASE}plato/nuevo/${id}`, data);\r\n    }\r\n    UpdateRecord(data, id) {\r\n        return this.http.put(`${this.URL_BASE}plato/actualizar/${id}`, data);\r\n    }\r\n    DeleteItemRecord(id) {\r\n        return this.http.delete(`${this.URL_BASE}plato/eliminar/${id}`);\r\n    }\r\n    BuscarPlatoById(id) {\r\n        const responce = fetch(`${this.URL_BASE}plato/buscarbyid/${id}`);\r\n        return responce;\r\n    }\r\n    async BuscarPlatoPorNombre(nombre) {\r\n        const responce = await fetch(`${this.URL_BASE}plato/buscarbyname/${nombre}`);\r\n        return await responce.json();\r\n    }\r\n    async listarPlatos() {\r\n        const responce = await fetch(`${this.URL_BASE}plato/listartodos`);\r\n        return await responce.json();\r\n    }\r\n}\r\nPlatoService.ɵfac = function PlatoService_Factory(t) { return new (t || PlatoService)(i0.ɵɵinject(i1.HttpClient)); };\r\nPlatoService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PlatoService, factory: PlatoService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}